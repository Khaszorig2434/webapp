class MyCart extends HTMLElement {
    constructor() {
        super();
        // –•–∞–¥–≥–∞–ª–∞–≥–¥—Å–∞–Ω –±“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω“Ø“Ø–¥–∏–π–≥ –∞–≤–∞—Ö
        const cartItems = JSON.parse(localStorage.getItem('cart')) || [];
        this.sagsniiToo= cartItems.reduce((sum, item) => {
            return sum + (item.number);
        }, 0);
        this.dialog = null;  // –î–∏–Ω–∞–º–∏–∫–∞–∞—Ä “Ø“Ø—Å–≥—ç—Ö –¥–∏–∞–ª–æ–≥
        this.backdrop = null; // –ë“Ø–¥—ç–≥–ª—ç—Ö –¥–∞–≤—Ö–∞—Ä–≥–∞   
    }
    

    render() {
        this.innerHTML = `
            <aside class="cart-icon">
                <div class="cart-count">${this.sagsniiToo}</div>
                <button class="cartButton" aria-label="–•—É–¥–∞–ª–¥–∞–∞–Ω—ã —Å–∞–≥—Å">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                        stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                        class="lucide lucide-shopping-cart">
                        <title>–•—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω —Å–∞–≥—Å</title>
                        <circle cx="8" cy="21" r="1" />
                        <circle cx="19" cy="21" r="1" />
                        <path d="M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12" />
                    </svg>
                </button>
            </aside>
        `;
    }

    connectedCallback() {
        this.render();
        const button = this.querySelector(".cartButton");
        button.addEventListener("click", () => this.showDialog());
    }

    showDialog() {
        // Backdrop “Ø“Ø—Å–≥—ç—Ö
        if (!this.backdrop) {
            this.backdrop = document.createElement("div");
            this.backdrop.classList.add("backdrop");
            document.body.appendChild(this.backdrop);
        }

        // Dialog “Ø“Ø—Å–≥—ç—Ö
        if (!this.dialog) {
            this.dialog = document.createElement("div");
            this.dialog.classList.add("cartDialog");

            // –•–∞–¥–≥–∞–ª–∞–≥–¥—Å–∞–Ω –±“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω“Ø“Ø–¥–∏–π–≥ –∞–≤–∞—Ö
            const cartItems = JSON.parse(localStorage.getItem('cart')) || [];
            //localStorage.clear();
            const productList = document.createElement('aside');
            productList.classList.add('listcart');

            // –î–∞–≤—Ö—Ü–ª—ã–≥ –∞—Ä–∏–ª–≥–∞–∂, –±“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω–∏–π —Ç–æ–æ —Ö—ç–º–∂—ç—ç–≥ –Ω—ç–≥—Ç–≥—ç—Ö
            const mergedCartItems = [];
            cartItems.forEach(item => {
                // ”®–º–Ω”© –Ω—å –±–∞–π–≥–∞–∞ —ç—Å—ç—Ö–∏–π–≥ —à–∞–ª–≥–∞—Ö
                const existingItem = mergedCartItems.find(existing =>
                    existing.name === item.name &&
                    existing.color === item.color
                );

                if (existingItem) {
                    // –•—ç—Ä—ç–≤ –¥–∞–≤—Ö—Ü–∞–∂ –±–∞–π–≥–∞–∞ –±–æ–ª —Ç–æ–æ —Ö—ç–º–∂—ç—ç–≥ –Ω—ç–º—ç–≥–¥“Ø“Ø–ª—ç—Ö
                    existingItem.number ++;
                } else {
                    // –•—ç—Ä—ç–≤ –±–∞–π—Ö–≥“Ø–π –±–æ–ª —à–∏–Ω—ç –±“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω –Ω—ç–º—ç—Ö
                    mergedCartItems.push(item);
                }
            });
            // LocalStorage-–¥ —à–∏–Ω—ç—á–ª—ç–≥–¥—Å—ç–Ω ”©–≥”©–≥–¥–ª–∏–π–≥ —Ö–∞–¥–≥–∞–ª–∞—Ö
            localStorage.setItem('cart', JSON.stringify(mergedCartItems));

            // –ù–∏–π—Ç –¥“Ø–Ω —Ç–æ–æ—Ü–æ–æ–ª–æ—Ö
            const totalPrice = mergedCartItems.reduce((sum, item) => {
                return sum + (item.number * item.price);
            }, 0);

            console.log("–ù—ç–≥—Ç–≥—ç—Å—ç–Ω ”©–≥”©–≥–¥”©–ª:", mergedCartItems);

            if (mergedCartItems.length > 0) {
                mergedCartItems.forEach(item => {
                    const productDiv = document.createElement('div');
                    productDiv.innerHTML = `
                        <p>–ù—ç—Ä: ${item.name}--${item.size}-- ${item.color}</p>
                        <p>“Æ–Ω—ç: ${item.number} * ${item.price}‚ÇÆ = ${item.number * item.price}‚ÇÆ</p>
                        <hr>
                    `;
                    productList.appendChild(productDiv);
                });
            } else {
                productList.innerHTML = '<p>–°–∞–≥—Å —Ö–æ–æ—Å–æ–Ω –±–∞–π–Ω–∞.</p>';
            }

            this.dialog.innerHTML = `
                <article>
                    <h1>üõí ${this.sagsniiToo} –ë“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω</h1>
                    <aside class="listcart">
                    </aside>
                </article>
                <div class="total-price">
                    <pre>       –ù–∏–π—Ç –¥“Ø–Ω: ${totalPrice}‚ÇÆ</pre>
                </div>
                <div class="listbtn">
                    <a href="cart.html" class="checkout">–ó–∞—Ö–∏–∞–ª–∞—Ö
                        <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" viewBox="0 0 24 24" fill="none"
                            stroke="red" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                            class="lucide lucide-paw-print">
                            <circle cx="11" cy="4" r="2" />
                            <circle cx="18" cy="8" r="2" />
                            <circle cx="20" cy="16" r="2" />
                            <path
                                d="M9 10a5 5 0 0 1 5 5v3.5a3.5 3.5 0 0 1-6.84 1.045Q6.52 17.48 4.46 16.84A3.5 3.5 0 0 1 5.5 10Z" />
                        </svg>
                    </a>
                </div>
                
            `;
            this.dialog.querySelector('article').appendChild(productList);
            document.body.appendChild(this.dialog);
        }

        // Backdrop –±–∞ –¥–∏–∞–ª–æ–≥—ã–≥ —Ö–∞—Ä–∞–≥–¥—É—É–ª–∞—Ö
        this.backdrop.style.display = "block";
        this.dialog.style.display = "block";

        // Modal-—ã–≥ –≥–∞–¥–Ω–∞ –¥–∞—Ä–∂ —Ö–∞–∞—Ö —ç–≤–µ–Ω—Ç –Ω—ç–º—ç—Ö
        window.addEventListener("click", (event) => {
            if (event.target === this.backdrop) {
                this.closeDialog();
            }
        });
    }

    closeDialog() {
        // Backdrop –±–æ–ª–æ–Ω –¥–∏–∞–ª–æ–≥—ã–≥ –Ω—É—É—Ö
        if (this.backdrop) this.backdrop.style.display = "none";
        if (this.dialog) this.dialog.style.display = "none";
    }

    addProduct() {
        // –°–∞–≥—Å–∞–Ω–¥ –±“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω –Ω—ç–º—ç—Ö
        this.sagsniiToo++;
        this.querySelector(".cart-count").innerText = this.sagsniiToo;
        if (this.dialog) {
            this.dialog.querySelector("h1").innerText = `üõí ${this.sagsniiToo} –ë“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω`;
        }
    }
}

window.customElements.define('my-cart', MyCart);