class MyCart extends HTMLElement {
    constructor() {
        super();
        this.cartItems = [];
        this.sagsniiToo = 0; // –°–∞–≥—Å–Ω—ã —Ç–æ–æ
        this.dialog = null;  // –î–∏–Ω–∞–º–∏–∫–∞–∞—Ä “Ø“Ø—Å–≥—ç—Ö –¥–∏–∞–ª–æ–≥
        this.backdrop = null; // –ë“Ø–¥—ç–≥–ª—ç—Ö –¥–∞–≤—Ö–∞—Ä–≥–∞
    }

    render() {
        this.innerHTML = `
            <aside class="cart-container">
                <button class="cartButton" aria-label="–•—É–¥–∞–ª–¥–∞–∞–Ω—ã —Å–∞–≥—Å">
                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none"
                        stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"
                        class="lucide lucide-shopping-cart">
                        <title>–•—ç—Ä—ç–≥–ª—ç–≥—á–∏–π–Ω —Å–∞–≥—Å</title>
                        <circle cx="8" cy="21" r="1" />
                        <circle cx="19" cy="21" r="1" />
                        <path d="M2.05 2.05h2l2.66 12.42a2 2 0 0 0 2 1.58h9.78a2 2 0 0 0 1.95-1.57l1.65-7.43H5.12" />
                    </svg>
                    <div>${this.sagsniiToo}</div>
                </button>
            </aside>
        `;
    }

    connectedCallback() {
        this.render();
        // –°–∞–≥—Å–Ω—ã —Ç–æ–≤—á –¥—ç—ç—Ä –¥–∞—Ä–∞—Ö–∞–¥ –¥–∏–∞–ª–æ–≥ “Ø“Ø—Å–≥—ç—Ö
        const button = this.querySelector(".cartButton");
        button.addEventListener("click", () => this.showDialog());
    }

    showDialog() {
        // Backdrop “Ø“Ø—Å–≥—ç—Ö
        if (!this.backdrop) {
            this.backdrop = document.createElement("div");
            this.backdrop.classList.add("backdrop");
            document.body.appendChild(this.backdrop);
        }

        // Dialog “Ø“Ø—Å–≥—ç—Ö
        if (!this.dialog) {
            this.dialog = document.createElement("div");
            this.dialog.classList.add("cartDialog");
            this.dialog.innerHTML = `
                <article>
                    <h1>üõí ${this.sagsniiToo} –ë“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω</h1>
                    <aside>
                        <pre></pre>
                    </aside>
                    <aside class="listbtn">
                        <button class="closee">–•–∞–∞—Ö</button>
                        <a href="cart.html" class="checkout">–ó–∞—Ö–∏–∞–ª–∞—Ö</a>
                    </aside>
                </article>
            `;
            document.body.appendChild(this.dialog);

            // –•–∞–∞—Ö —Ç–æ–≤—á –¥—ç—ç—Ä —ç–≤–µ–Ω—Ç–∏–π–Ω —Å–æ–Ω—Å–æ–≥—á –Ω—ç–º—ç—Ö
            const closeButton = this.dialog.querySelector(".closee");
            closeButton.addEventListener("click", () => this.closeDialog());
        }

        // Backdrop –±–∞ –¥–∏–∞–ª–æ–≥—ã–≥ —Ö–∞—Ä–∞–≥–¥—É—É–ª–∞—Ö
        this.backdrop.style.display = "block";
        this.dialog.style.display = "block";
    }

    closeDialog() {
        // Backdrop –±–æ–ª–æ–Ω –¥–∏–∞–ª–æ–≥—ã–≥ –Ω—É—É—Ö
        if (this.backdrop) this.backdrop.style.display = "none";
        if (this.dialog) this.dialog.style.display = "none";
    }

    addProduct() {
        //localstorage
        this.cartItems.push(productData);
        localStorage.setItem('cart', JSON.stringify(this.cartItems));
        this.sagsniiToo++;
        this.querySelector("div").innerText = this.sagsniiToo;
        if (this.dialog) {
            this.dialog.querySelector("h1").innerText = `üõí ${this.sagsniiToo} –ë“Ø—Ç—ç—ç–≥–¥—ç—Ö“Ø“Ø–Ω`;
        }
    }
}

window.customElements.define("my-cart", MyCart);
